<?xml version="1.0" encoding="US-ASCII"?>
<!-- This is built from a template for a generic Internet Draft. Suggestions for
     improvement welcome - write to Brian Carpenter, brian.e.carpenter @ gmail.com 
     This can be converted using the Web service at http://xml.resource.org/ -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<!-- You want a table of contents -->
<!-- Use symbolic labels for references -->
<!-- This sorts the references -->
<!-- Change to "yes" if someone has disclosed IPR for the draft -->
<!-- This defines the specific filename and version number of your draft (and inserts the appropriate IETF boilerplate -->
<?rfc sortrefs="yes"?>
<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc topblock="yes"?>
<?rfc comments="no"?>
<rfc category="info" docName="draft-ietf-detnet-scaling-requirements-01"
     ipr="trust200902">
  <front>
    <title abbrev="Deterministic Networking">Requirements for Scaling
    Deterministic Networks</title>

    <author fullname="Peng Liu" initials="P." surname="Liu">
      <organization>China Mobile</organization>

      <address>
        <postal>
          <street/>

          <city>Beijing</city>

          <code>100053</code>

          <country>China</country>
        </postal>

        <email>liupengyjy@chinamobile.com</email>
      </address>
    </author>

    <author fullname="Yizhou Li" initials="Y." surname="Li">
      <organization>Huawei</organization>

      <address>
        <postal>
          <street/>

          <city>Nanjing</city>

          <code>210012</code>

          <country>China</country>
        </postal>

        <email>liyizhou@huawei.com</email>
      </address>
    </author>

    <author fullname="Toerless Eckert" initials="T." surname="Eckert">
      <organization>Futurewei Technologies USA</organization>

      <address>
        <postal>
          <street/>

          <city>Santa Clara</city>

          <code>95014</code>

          <country>United States of America</country>
        </postal>

        <email>tte@cs.fau.de</email>
      </address>
    </author>

    <author fullname="Quan Xiong" initials="Q." surname="Xiong">
      <organization>ZTE Corporation</organization>

      <address>
        <postal>
          <street/>

          <city>Wuhan</city>

          <code>430223</code>

          <country>China</country>
        </postal>

        <email>xiong.quan@zte.com.cn</email>
      </address>
    </author>

    <author fullname="Jeong-dong Ryoo" initials="J." surname="Ryoo">
      <organization>ETRI</organization>

      <address>
        <postal>
          <street/>

          <city>Daejeon</city>

          <code>34129</code>

          <country>South Korea</country>
        </postal>

        <email>ryoo@etri.re.kr</email>
      </address>
    </author>

    <author fullname="Shiyin Zhu" initials="S." surname="Zhu">
      <organization>New H3C Technologies</organization>

      <address>
        <postal>
          <street/>

          <city>Beijing</city>

          <code>100094</code>

          <country>China</country>
        </postal>

        <email>zhushiyin@h3c.com</email>
      </address>
    </author>

    <author fullname="Xuesong Geng" initials="X." surname="Geng">
      <organization>Huawei</organization>

      <address>
        <postal>
          <street/>

          <city>Beijing</city>

          <code>100095</code>

          <country>China</country>
        </postal>

        <email>gengxuesong@huawei.com</email>
      </address>
    </author>

    <date day="2" month="March" year="2023"/>

    <area>Networking</area>

    <workgroup>Deterministic Networking Working Group</workgroup>

    <keyword>Scaling; Deterministic; Requirement</keyword>

    <abstract>
      <t>Aiming at scaling deterministic networks, this document describes the
      technical and operational requirements when the network has large
      variation in latency among hops, great number of flows and/or multiple
      domains without the same time source. Different deterministic levels of
      applications co-exist and are transported in such a network. This
      document also describes the corresponding Deterministic Networking
      (DetNet) data plane enhancement requirements.</t>
    </abstract>
  </front>

  <middle>
    <section anchor="intro" title="Introduction">
      <t>Packet networks are evolving from bandwidth-guaranteed Quality of
      Service (QoS) to latency-guaranteed QoS that guarantees bounded latency
      and definite latency. Bounded latency and definite latency can be
      further understood as in-time delivery, in which a packet arrives
      without exceeding a predetermined time, and on-time delivery, in which a
      packet arrives at a predetermined time, respectively. In addition,
      network survivability, which typically guarantees traffic recovery
      within 50 ms in the event of a network failure, is evolving to a level
      that guarantees lossless recovery. In order to realize the evolution of
      QoS and network survivability of these networks, Time-Sensitive
      Networking (TSN) technology and Deterministic Networking (DetNet)
      technology are considered to be essential.</t>

      <t>TSN is a set of standards developed by the IEEE 802.1 TSN Task Group
      (TG) <xref target="IEEE802.1TSN"/> and specifies mechanisms and
      protocols necessary to realize highly available IEEE 802.1 networks with
      bounded latency to carry time-sensitive, real-time application
      traffic.</t>

      <t>DetNet, of which architecture is defined in RFC 8655 <xref
      target="RFC8655"/>, provides a capability to carry specified unicast or
      multicast data flows for real-time applications with extremely low data
      loss rates and bounded latency under a single administrative control or
      within a closed group of administrative control. The overall framework
      for DetNet data plane is provided in <xref target="RFC8938"/>, and
      various documents on different data plane technologies and their
      interworking technologies to extend the service range of data that TSN
      intends to deliver to the IP (Internet Protocol) and MPLS
      (Multi-Protocol Label Switching) networks have been standardized.</t>

      <t>When deterministic networks become large and/or multiple domains
      should be stitched, DetNet solutions need to take into consideration one
      or more of the following points:</t>

      <t>* There is relaxed clock synchronization or no clock synchronization
      in different domains. (Section 3.1)</t>

      <t>* The end to end path is a combination of low and high latency hops.
      (Section 3.2)</t>

      <t>* There are various transmission rates supported at different ports
      and on different network nodes.(Section 3.3)</t>

      <t>* There are a large number of flows which may be difficult to
      identifiy per-flow state.(Section 3.4)</t>

      <t>* The flow fluctuation caused by large number of flows may happen
      frequently.(Section 3.5)</t>

      <t>* The topology change and failures of link might be more
      common.(Section 3.6)</t>

      <t>* The mechanisms used to ensure bounded latency (e.g. queuing
      mechanism) may be multiple or have different configuration/parameters in
      multi-domains.(Section 3.7)</t>

      <t>Such domains are normally within a single administrative control
      network or multiple cooperating administrative networks within a closed
      group of administrative control <xref target="RFC8655"/>. However they
      may belong to different AS domains and be controlled by multiple peering
      or cascaded controllers, and at the same time they may not have the same
      time clock source. Maintaining per flow status becomes impractical in
      the large scale network. Aggregation and disaggregation of flows take
      place at the boundaries of DetNet domains as well as within a DetNet
      domain with various rules. The flow identification and packet treatment
      should take care of one or combined changes introduced by scaling
      deterministic networks.</t>

      <t>Based on the consideration above, this document describes
      requirements for scaling deterministic networks which demands the
      enhancement based on the existing bounded latency mechanisms and the
      corresponding data plane to ensure the DetNet service for a single
      administrative network or multiple (cooperating) administrative networks
      that defined in the DetNet charter. The deterministic network for open
      internet is not within current scope.</t>
    </section>

    <section title="Conventions Used in This Document">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
      "OPTIONAL" in this document are to be interpreted as described in BCP 14
      <xref target="RFC2119"> </xref><xref target="RFC8174"/> when, and only
      when, they appear in all capitals, as shown here.</t>

      <t>While <xref target="RFC2119"/> and <xref target="RFC8174"/> describe
      interpretations of these key words in terms of protocol specifications
      and implementations, they are used in this document to describe
      technical and operational requirements to realize scaling deterministic
      networks.</t>
    </section>

    <section title="Technical Requirements in Large-Scale Deterministic Networks">
      <t>Due to the attributes described in Introduction Section, the
      corresponding technical requirements should be considered.</t>

      <section title="Tolerate Time Asynchrony">
        <t>A deterministic network may span over multiple networks with one or
        more cooperating administrative domains. There are many types of
        network nodes in the multiple domains which may introduce disparate
        local time variation, which require the tolerance of time
        asynchrony.</t>

        <section title="Support Asynchronous Clocks Across Domains">
          <t>One of DetNet's objectives is to stitch TSN islands together. All
          devices inside a TSN domain are time-synchronized, and most of TSN
          technologies rely on precise time synchronization<xref
          target="IEEE802.1Qbv"> </xref><xref target="IEEE802.1Qch"/><xref
          target="IEEE802.1Qav"/>. However, different TSN islands may have
          different clocks which are not synchronized as shown in Figure 2,
          where the time difference of two TSN domains is D. DetNet needs to
          connect these two TSN domains together and provide end-to-end
          deterministic latency service. The mechanism adopted by a
          deterministic network MUST be prepared to cross multiple domains
          (For instance, coping with non-synced TSN domains). This can be
          done, for example, by putting extra buffer space at the ingress of a
          new domain, increasing the dead time as a guard band, or using some
          timing compensation mechanism. This document does not intend to list
          all the potential ways.</t>

          <figure align="center"
                  title="Clock asynchrony between two TSN islands">
            <artwork type="ascii-art">
+--------------+                             +--------------+
|              |      DetNet Connection      |              |
| TSN Domain I +-----------------------------+ TSN Domain II|
|              |                             |              |
+--------------+                             +--------------+
                 |        |        |        |        |
 Clock of TSN    +--------+--------+--------+--------+
 Domain I        =
                 =
                 =       |        |        |        |        |
 Clock of TSN    =       +--------+--------+--------+--------+
 Domain II       =       =
                 =&lt;==D==&gt;=
                 =       =
                     </artwork>
          </figure>
        </section>

        <section title="Tolerate Clock Jitter &amp; Wander within a Clock Synchronous Domain">
          <t>Within a single time synchronization domain, different clock
          accuracy is expected, for example the crystal oscillator in Ethernet
          is specified at 100 ppm <xref target="Fast-Ethernet-MII-clock"/>,
          Synchronous Ethernet (SyncE) can achieve 50 ppb <xref
          target="G.8262"/>, and more precise time synchronization <xref
          target="G.8273"/> is expected in 5G mobile backhaul. The clocks
          experience different jitter and wander. It may cause different level
          of asymmetry of the path. The deterministic networks SHOULD be able
          to recover or absorb such time variance within a domain.</t>
        </section>

        <section title="Provide Mechanisms not Requiring Full Time Synchronization">
          <t>It is usually hard to achieve the full time
          synchronization(Section 3.1.1 and Section 3.1.2 ) when the scale of
          networks become large and considering the size of the network
          topology. Some networks like mobile backhaul use frequency
          synchronization, such as SyncE, instead of the strict time
          synchronization. It is desired that the same deterministic
          performance in term of the bounded latency and jitter SHOULD be
          achieved when full time synchronization is not available, that is to
          say, when only partial synchronization (SyncE is one of the
          examples) is in use.</t>
        </section>

        <section title="Provide Mechanisms not Requiring Synchronization">
          <t>There can be a large number of traffic flows in a deterministic
          network and some of them are acyclic. Asynchronization based methods
          can meet the requirements of those traffic flows. Moreover, The
          mechanisms not requiring the time and/or frequency synchronization
          eliminate the hardware cost and difficulty at the network
          nodes.<xref target="IEEE802.1Qcr"/> conceptually uses per-flow based
          asynchronous shaper to achieve bounded latency. The effectiveness of
          the per-flow based asynchronous shaper can be proven through
          mathematical analysis. It can naturally tolerate the time variance,
          but it exhibits the concerns of per-flow state buffer management as
          shown in <xref
          target="I-D.eckert-detnet-bounded-latency-problems"/>. When it is in
          use, the requirement in Section 4.3 SHOULD be carefully met.</t>
        </section>
      </section>

      <section title="Support Large Single-hop Propagation Latency">
        <t>In some deterministic networks, a single hop distance is enough to
        generate large latency. The speed of optical transmission in fiber is
        200 km/ ms. Thus, the propagation delay of a single hop can be in the
        order of a few milliseconds. It is much greater than that of a LAN,
        and introduces impacts on queuing mechanisms, such as cyclic or time
        aware scheduling method. So the queuing mechanism for LAN networks
        needs to be extended, such as considering the propagation latency when
        setting the period in both time synchronization or frequency
        synchronization based methods, or setting the extra buffer in the
        asynchronization based methods, to meet the requirements of
        deterministic forwarding between the network nodes.</t>

        <t>Here, we use an example to describe the influence of Large
        single-hop propagation delay on cycle based methods, but not to
        specify any solution. For a cyclic based method, suppose a
        deterministic network wants to keep using the simple cycle mapping
        relationship, however the link distance between two nodes is longer.
        Moreover, a downstream node may have many upstream nodes each with
        different link propagation delays (e.g., 9 us, 10 us, 11 us, 15 us and
        20 us). In order to absorb the longest link propagation delay, the
        length of cycle must be set to at least 20 us. However, since packet's
        arrival time varies within the receiving cycle, larger cycle length
        means larger delay variance.</t>

        <figure align="center"
                title="The influence of transmission latency on a cyclic method">
          <artwork type="ascii-art">
            Upstream Node X  |sending cycle  |            |                      
                             +--"------------+------------+                       
                             =  "\           =            =                      
                             =  " \          =            =                     
                             =  "  \         =            =                     
                             =  "   \        =            =                  
                             =  "    V       =            =                      
           Downstream Node Y |receiving cycle|            |                     
                             +--"----"-------+----\-------+                    
                             =  "    "       =     \      =                     
                             =  "    "       =      V resent out               
                             =  "    "       =            =                   
                Time Line   -=--"----"-------=------------=-----&gt;               
                (in us)      0  |    |   10           20
                                v    v  
                          Transmission Latency                              
                                </artwork>
        </figure>

        <t>Note that Figure 2 is just to show an example of latency caused by
        large single-hop propagation. CQF is not limited to 2 queues, instead
        using more than 2 queues can be an option to solve large link latency
        related concerns. <xref target="Multiple-CQF"/>describes this problem
        in more detail and also proposes a mechanism to address it.</t>
      </section>

      <section title="Accommodate the Higher Link Speed">
        <t>A deterministic network can use higher speed links, especially for
        its backbone. At the time of publication, deterministic mechanisms
        used in a local network is usually deployed in link speed of 10 Mbps
        or 1 Gbps, or possibly 10 Gbps. The data rates of 10G, 100G, 400G and
        even higher are commonly used in wide area networks. With the
        increasing of the data rate, the network scheduling cycle can be
        reduced if the same amount of the data is required to be sent each
        cycle for each application. Or, more data can be sent if the network
        cycle time remains the same. For the former, it requires the more
        precise time control (e.g. cycle in the order of a few microseconds or
        sub- microseconds) for the input stream gate and the timed output
        buffer. For the latter, more buffer space is required which imposes
        more complex buffer or queue management and larger memory
        consumption.</t>

        <t>Another aspect to consider is the aggregation of the flows. In the
        deterministic network, the number of flows can be hundreds or tens of
        thousands. They can be aggregated into a small number of deterministic
        path or tunnels. It is practical to have a few flow- based or
        aggregated-flow based status in the local network. But in higher speed
        and larger scale networks, it is hardly feasible. If <xref
        target="IEEE802.1Qcr"/> is in use, it requires more buffers comparing
        to the other full/partial time synchronized mechanisms. Therefore, it
        requires optimizations to support higher link speeds.</t>
      </section>

      <section title="Be Scalable to The Large Number of Flows">
        <t>The deterministic network may have the large number of traffic
        flows. According to <xref target="RFC2475"/>, per-flow state
        identification in the network becomes infeasible as flow count scales
        up.So, it is almost impossible to identify individual IP flows at the
        DetNet data plane for a massive number of flows.</t>

        <t>DetNet allows the leverage of the flow aggregation, while
        individual flows may join and exit the aggregated flow rapidly in the
        scaling network with large number of flows,which causes the dynamic in
        identification of the aggregated DetNet flow. The wildcards and value
        ranges used in the identification may have to change in order to
        ensure the aggregated flows have compatible deterministic
        characteristics.Moreover, for scaling network, proper provision at the
        control plane to accommodate such higher aggregation is required. The
        deterministic latency forwarding mechanisms MUST scale to networks of
        significant size with the massive traffic flows.</t>
      </section>

      <section title="Prevent Flow Fluctuation from Disrupting Service">
        <t>More kinds of traffic flows described in Section 3.4 will cause
        more dynamic joining or leaving of the flows, which will further cause
        more flow fluctuation as well as more unpredictability of the DetNet
        flows. In this case, it is more difficult to do the traffic control
        for the network and packet treatment for the device. For instance,
        there will be more aggregation nodes which receives the flows from
        more upstream nodes, which adds the nondeterministic delay of the
        packet treatment. Once one of the nodes makes the minor error of
        packet treatment, it will have the cumulative effect for the
        downstream nodes. This problem may also happen in LAN, but the large-
        scale network has more nodes. So, the effect will be huger. Moreover,
        considering the node and link failures are more common in a large
        network which requires dynamic traffic steering to an alternate path,
        it will also easily cause the flow fluctuation. So the pre-planned,
        dynamic traffic steering and enhanced capacity of buffer are required
        to accommodate the Flow Fluctuation.</t>

        <t>The micro-burst will happen more often due to the massive traffic
        flows, so some methods to decrease it are needed. For instance, a
        scalable buffer to adjust the speed of sending the packets <xref
        target="I-D.du-detnet-layer3-low-latency"/> , or the edge shaping
        based solution to reduce the micro-burst may also work to some
        extent.</t>

        <t/>
      </section>

      <section title="Tolerate Failures of Links or Nodes and Topology Changes">
        <t>Deterministic networks may involve more network devices, and the
        increase or decrease of network devices in deterministic networks is
        more frequent than that in LANs. A simple use case to understand is
        ultra-low-latency (public) 5G transport networks, which would require
        DetNet extend to every 5G base station. For some network operators,
        their networks may need to connect to ~100 K base stations (serving
        multiple mobile networks operators), and this number will only
        increase with 5G.</t>

        <t>One the one hand, the numerous devices may lead to more network
        link failures. Path switching or re-convergence of routing will cause
        high latency of packet loss and retransmission, which is usually in
        seconds before the network becomes stable again. As the added delay
        magnitudes involved are too large to use jitter compensation
        techniques&#65292;It is necessary to support certain mechanisms to
        adapt to failures of links or nodes and topology changes.</t>

        <t>One the other hand, the change of the number of devices may affect
        the implementation and adjustment of deterministic network mechanism,
        such as the topology discovery, queuing mechanism and packet
        replication and elimination. For instance, The full disjoint paths
        when implementing the Packet Replication, Elimination, and Ordering
        Functions (PREOF) gives a better chance of survival when one of the
        nodes or links in the path fails. At the same time, it brings the
        challenges of finding paths with similar distance and/or number of
        hops so that there is enough buffer space to absorb the latency
        difference caused by different paths when the scale is large. So, a
        method is expected to support flexible planning of multiple paths and
        provide a solid foundation for the implementation of PREOF.</t>

        <t/>
      </section>

      <section title="Support Enhancement of Queuing Mechanisms">
        <t>There will be large number of flows that described in Section 3.4,
        the flows may have different levels of demand for DetNet service<xref
        target="RFC8578"/> provides various use cases and their requirements
        in the areas of industry, electricity, buildings, etc. Some of them
        clearly specify the requirements for latency and jitter, while some
        others do not for the jitter. Different types of users have different
        demands, just as a network provider provides different network
        services for personal business or enterprise business.</t>

        <t>One kind has critical SLA requirement, such as remote control or
        cloud Programmable Logic Controller (PLC) of manufacturing and
        differential protection of electricity. If these services exceed the
        boundaries of latency and jitter, it will bring property losses and
        security risks, so they cannot tolerate with any non-deterministic
        situation and can pay more on the network service. Another kind has
        relatively loose levels of SLA requirement, such as cloud gaming,
        cloud VR and online meeting for "consumer" networks. The users of
        these applications hope to have a better network experience, but they
        can tolerate it to a certain extent. For instance, exceeding the upper
        boundary of latency within a small probability is acceptable. Those
        different applications expect different kind of solutions, which are
        related to the cost more or less.</t>

        <t>The different SLA demands need different DetNet technologies as
        well as the multi-domain demand in scaling network, which results in
        the requirements for the diverse queuing mechanisms. For strict
        deterministic services, strict queuing technologies need to be used,
        and all network devices may need to be upgraded. For non-strict
        deterministic services, it may only be necessary to upgrade some
        network devices(maybe edge nodes) or share corresponding network
        resources.</t>

        <t>Those different queuing technologies may be used in:</t>

        <t>* the same network which requires the some of the equipment in the
        same network providing multiple queuing technologies. The operator can
        select the service type/level accordingly.</t>

        <t>* the multiple domain network which support different queuing
        technologies while needs the coordination with each other.</t>

        <t>* different network implementations intended for different
        application domains individually, where there is no additional
        requirements for the coordination.</t>

        <figure align="center"
                title="Different levels of application requirements">
          <artwork type="ascii-art">                 Critical latency requirements:

     |      &lt;-&gt;| Industrial, tight jitter, hard latency limit
     |&lt;-------&gt;| Industrial, hard latency limit
     |
     |&lt;-------------.....&gt;  Relatively lower latency requirements
     |
     |&lt;-------------........................&gt;   Best effort
     |
     +----------------------------------------------------------&gt;
                                                          latency</artwork>
        </figure>

        <section title="Support Configuration of Multiple Queuing Mechanisms">
          <t>It is required to provide diversified deterministic service for
          various applications in a deterministic network and to support the
          corresponding diversified queuing mechanisms (possibly at multiple
          DetNet QoS levels). Different queuing mechanisms can provide
          different levels of latency, jitter and other guarantees, and there
          may be situations where a network device provides multiple queuing
          mechanisms at the same time. For example, a network aggregation
          device may use the mechanisms specified in <xref
          target="IEEE802.1Qbv"/> and <xref target="IEEE802.1Qcr"/>, and other
          mechanisms to forward traffic to different paths at the same time.
          By providing a variety of queuing mechanisms to meet diversified
          deterministic service requirements, compared with small scale
          environment, this demand is particularly prominent in large-scale
          networks. For instance, there may be more than eight queues or
          sub-queues to support more complicated queuing mechanisms comparing
          with the eight traffic classes in TSN enabled networks.</t>

          <t>Accordingly, the configuration for multiple queuing mechanisms
          can be complicated in deterministic networks and MUST support the
          unified or simplified scheduling and management of multiple queuing
          mechanisms. For example, in the distributed scenario with no
          controller, the related information of the queuing mechanisms could
          be advertised among the domain, including the types and related
          algorithms, queue forwarding capability with different levels of
          latency and jitter guarantees, etc. In the centralized scenario, the
          queuing mechanisms and other information could be reported to the
          controller to build a deterministic network resource topology pool
          for path calculation. In addition, for refined management of forward
          resources and providing resource assurance for deterministic
          forwarding when establishing/deleting sessions, it is required to
          establish unified mechanisms on quantification and measurement of
          resources associated with interfaces and queues.</t>
        </section>

        <section title="Support Queuing Mechanisms Switchover Crossing Multi-domains">
          <t>In deterministic networks, end-to-end service may across multiple
          network domains and adopt a variety of different queuing mechanisms
          within each domain. It is required to support the inter-domain
          deterministic mechanism at the inter-domain boundary nodes such as
          the priority redefinition and rescheduling of queues to achieve the
          end-to-end latency, bounded jitter and packet loss ratio.</t>

          <t>Moreover, changing from one queuing mechanism to another may
          generate additional end-to-end latency and/or jitter which should be
          taken into consideration,because the different scheduling
          granularities or phase differences between the two domains requires
          flexible flow aggregation and queue stitching function. For example,
          when a flow is forwarded across multiple network domains based on
          different queuing mechanisms, such as a time synchronous Qbv
          mechanism <xref target="IEEE802.1Qbv"/> and an asynchronous Qcr
          mechanism <xref target="IEEE802.1Qcr"/>, a collaboration mechanism
          crossing multi-domains MUST be considered, such as increasing the
          buffer of inter-domain devices to provide enough adjustment space
          for the flow to cross different queuing mechanisms, the expected
          method of jitter compression to reduce the coupling between two
          domains&rsquo; queuing mechanisms, or the additional traffic shaping
          solutions to make the traffic smooth, so as to provide end-to-end
          deterministic services across multiple network domains.</t>
        </section>
      </section>
    </section>

    <section title="Data Plane Enhancement Requirements">
      <t>According to <xref target="RFC8938"/>, the DetNet data plane can
      provide or carry two metadata in MPLS and IP data planes: Flow-ID and
      sequence number. The Flow-ID could be used for identification of the
      DetNet flow or aggregate flow, and the sequence number could be used for
      PREOF for each DetNet flow. The Flow-ID is used by both the service and
      forwarding sub-layers, but the sequence number is only used by the
      service layer. Metadata can also be used for OAM indications and
      instrumentation of DetNet data plane operation.</t>

      <t>Generally speaking, more data plane metadata and related processing
      SHOULD be supported in the deterministic networks. By introducing IPv6
      Extension Headers <xref target="RFC8200"/> and Segment Routing over IPv6
      <xref target="RFC8986"/>, native IPv6 data plane should be supported
      with the IPv6-sepcific enhancement. This section lists the data plane
      enhancement requirements based on but not limited to the technical
      requirements in Section 3, describing how to use IP and/or MPLS, and
      related OAM, to support a data plane method of flow identification and
      packet treatment over Layer 3.</t>

      <section title="Support Aggregated Flow Identification  ">
        <t>Current IPv6 aggregated flow identification is generally based on 5
        or 6 tuples, IP prefixes, or wildcards as indicated in <xref
        target="RFC8938"/>. However, in deterministic networks the number of
        individual flows can be huge, and they may randomly join and leave the
        aggregated flow at each hop as described in Section 5. Such behaviours
        lead to the difficulty in identifying aggregated flows by relying on
        the prefixes or wildcards.</t>

        <t>In addition, the deterministic services may demand different
        deterministic QoS requirements according to different levels of
        application requirements. The flow identification with service-level
        aggregation should be supported. Flow identification is also used to
        quickly push a packet to a suitable queue. In scaling network, there
        are large amount of flows requiring deterministic latency service and
        normal forwarding service. Explicit flow identification makes it
        easier to quickly distinguish the DetNet flows without requiring the
        longest match rule on multiple tuples in IP data plane. Therefore,
        explicit aggregated flow identification SHOULD be supported.</t>
      </section>

      <section title="Support Information used  by Functions ensuring Deterministic Latency">
        <t>According to Section 3.1, the deterministic network should support
        synchronized or asynchronized queuing mechanisms. Different queuing
        mechanisms require different information to be defined as the DetNet-
        specific metadata to help the functions of ensuring deterministic
        latency, including regulation, queue management, etc. For instance,
        the data plane needs to support the identification of cycle for cyclic
        queuing and forwarding or the latency related information for time
        based queuing in order to enable the applicability of the respective
        queuing and/or scheduling mechanisms in the large scale network.</t>

        <t>When different queuing mechanisms are deployed at a network node,
        metadata used for each queuing mechanism should be provided at the
        same time. When multiple metadata carried in one packet, metadata
        should be self-described and extensible to tolerate variable number of
        metadata. Meanwhile, extra data will cause extra processing, referring
        to fixed or variable length lookups, total number of read/write access
        to the packet header, etc. So the data plane processing efficiency
        also needs to be considered when ensuring deterministic latency, but
        the specific method or solution is out of scope of this document.</t>

        <t>This document does not specify what metadata and what format to be
        carried in data plane. The solution document should be specific enough
        on why and how the information carried as data plane meta data works
        in conjunction with the queuing or other functions and how it helps
        the deterministic network deployment.</t>
      </section>

      <section title="Support Redundancy Related Fields ">
        <t>Sequence number is the only metadata currently defined for
        redundancy feature of DetNet. MPLS data plane uses DetNet-over-MPLS
        label stack to carry it. At the same time, native IPv6 data plane
        should be able to carry this information too. If specific IP
        encapsulation or tunnel is in use, this meta data should be defined
        explicitly for that data plane.</t>
      </section>

      <section title="Support Explicit Path Selection">
        <t>Explicit route at the control plane and/or management is required
        so that the "best" path can be selected to meet the latency
        requirement for DetNet flows. At the data planes, MPLS label stack can
        be used for this purpose. IP data plane enhancement is required to
        support the explicit path selection based on IP source routing or
        SRv6.</t>
      </section>
    </section>

    <section title="Conclusion">
      <t>This document specifies the technical requirements for scaling
      deterministic networks and the corresponding data plane enhancement
      requirements. Some of the proposed queuing mechanisms and trials are
      cited, and the authors of the document think those proposals give
      reasonably sound insights to enhance the current queuing mechanisms to
      meet the requirements of scaling deterministic networks.</t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>When DetNet flows span multiple domains and require multi domain
      collaboration, security guarantee needs to be strengthened. More
      considerations will be described later.</t>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>This section will be described later.</t>
    </section>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>The authors would like to thank Daivd Black, Lou Berger,
      Bala&rsquo;zs Varga, Fan Yang, Tianran Zhou,Yaakov Stein for helpful
      suggestions. The authors also would like to thank Liang Geng, Peter
      Willis, Shunsuke Homma and Li Qiang for their previous works.</t>
    </section>

    <section title="Contributors">
      <t>The following people have substantially contributed to this
      document:</t>

      <t><figure>
          <artwork>
	Zongpeng Du
	China Mobile
	EMail: duzongpeng@chinamobile.com

	Lei Zhou
	New H3C Technologies
	Email: zhou.leih@h3c.com
</artwork>
        </figure></t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119"?>

      <?rfc include="reference.RFC.2475"?>

      <?rfc include="reference.RFC.8200"?>

      <?rfc include="reference.RFC.8174"?>

      <?rfc include="reference.RFC.8578"?>

      <?rfc include="reference.RFC.8655"?>

      <?rfc include="reference.RFC.8938"?>

      <?rfc include="reference.RFC.8986"?>

      <?rfc include="reference.I-D.geng-detnet-requirements-bounded-latency"?>

      <?rfc include="reference.I-D.eckert-detnet-bounded-latency-problems"?>

      <?rfc include="reference.I-D.dang-queuing-with-multiple-cyclic-buffers"?>

      <?rfc include="reference.I-D.qiang-detnet-large-scale-detnet"?>

      <?rfc include="reference.I-D.du-detnet-layer3-low-latency"?>

      <reference anchor="Fast-Ethernet-MII-clock">
        <front>
          <title>Fast Ethernet MII clock</title>

          <author surname="">
            <organization/>

            <address/>
          </author>

          <date/>
        </front>
      </reference>

      <reference anchor="Multiple-CQF">
        <front>
          <title>Multiple Cyclic Queuing and Forwarding.
          https://www.ieee802.org/1/files/public/docs2021/new-finn-multiple-CQF-0921-v02.pdf</title>

          <author surname="">
            <organization>IEEE</organization>

            <address/>
          </author>

          <date/>
        </front>
      </reference>

      <reference anchor="G.8262">
        <front>
          <title>Timing characteristics of a synchronous equipment slave
          clock</title>

          <author>
            <organization>International Telecommunication Union</organization>
          </author>

          <date month="November" year="2018"/>
        </front>

        <seriesInfo name="ITU-T" value="Recommendation G.8262"/>
      </reference>

      <reference anchor="G.8273">
        <front>
          <title>Framework of phase and time clocks</title>

          <author>
            <organization>International Telecommunication Union</organization>
          </author>

          <date month="March" year="2018"/>
        </front>

        <seriesInfo name="ITU-T" value="Recommendation G.8273"/>
      </reference>

      <reference anchor="IEEE802.1Qav">
        <front>
          <title>IEEE Standard for Local and metropolitan area networks --
          Virtual Bridged Local Area Networks - Amendment 12: Forwarding and
          Queuing Enhancements for Time-Sensitive Streams</title>

          <author>
            <organization>IEEE</organization>
          </author>

          <date day="5" month="January" year="2010"/>
        </front>

        <seriesInfo name="IEEE" value="802.1Qav-2009"/>

        <seriesInfo name="DOI" value="10.1109/IEEESTD.2010.8684664"/>
      </reference>

      <reference anchor="IEEE802.1Qbv">
        <front>
          <title>IEEE Standard for Local and metropolitan area networks --
          Bridges and Bridged Networks - Amendment 25: Enhancements for
          Scheduled Traffic</title>

          <author>
            <organization>IEEE</organization>
          </author>

          <date day="18" month="March" year="2016"/>
        </front>

        <seriesInfo name="IEEE" value="802.1Qbv-2015"/>

        <seriesInfo name="DOI" value="10.1109/IEEESTD.2016.8613095"/>
      </reference>

      <reference anchor="IEEE802.1Qch">
        <front>
          <title>IEEE Standard for Local and metropolitan area networks --
          Bridges and Bridged Networks - Amendment 29: Cyclic Queuing and
          Forwarding</title>

          <author>
            <organization>IEEE</organization>
          </author>

          <date day="28" month="June" year="2017"/>
        </front>

        <seriesInfo name="IEEE" value="802.1Qch-2017"/>

        <seriesInfo name="DOI" value="10.1109/IEEESTD.2017.7961303"/>
      </reference>

      <reference anchor="IEEE802.1Qcr">
        <front>
          <title>IEEE Standard for Local and Metropolitan Area Networks --
          Bridges and Bridged Networks - Amendment 34: Asynchronous Traffic
          Shaping</title>

          <author>
            <organization>IEEE</organization>
          </author>

          <date day="6" month="November" year="2020"/>
        </front>

        <seriesInfo name="IEEE" value="802.1Qcr-2020"/>

        <seriesInfo name="DOI" value="10.1109/IEEESTD.2020.9253013"/>
      </reference>

      <reference anchor="IEEE802.1TSN"
                 target="https://www.ieee802.org/1/pages/tsn.html">
        <front>
          <title>IEEE 802.1 Time-Sensitive Networking Task Group</title>

          <author>
            <organization>IEEE Standards Association</organization>
          </author>

          <date month="" year=""/>
        </front>
      </reference>
    </references>

    <section title="Examples of Large-Scale Deterministic Network Trials">
      <t>Some trials have been carried out to verify the concept of
      large-scale deterministic networks.</t>

      <t>In order to verify the deterministic technology of large-scale
      networks, a trial of Deterministic IP on China Environment for Network
      Innovations (CENI), which is a network built for new network technology
      trial, was deployed. A network with a distance of 3,000 km over 13 hops
      was tested, and the jitter was controlled within 100us.</t>

      <t>In order to verify the remote control on Deterministic IP, which
      required that the latency should be controlled within 4 ms and jitter
      should be controlled within 20 us. A trial cooperated with Baosteel
      spanned 600 km was deployed. Baosteel is a Chinese steel company and put
      forward this demand. Both of the first and second trials are based on a
      frequency synchronization solution. The mechanism details could be found
      in <xref
      target="I-D.dang-queuing-with-multiple-cyclic-buffers">.</xref><xref
      target="I-D.qiang-detnet-large-scale-detnet"/>.</t>

      <t>In order to realize multi flows synchronization on an inter-
      provincial network in an exhibition, Emergen proposed the requirement
      that two flows of video and virtual reality (VR) were sent from province
      A, and arrived at province B together, so people can see the
      synchronization of video collected by camera and the VR model. This
      requirement was proposed to facilitate the virtual industry product
      deployment. Due to time and other problems, it was realized by the edge
      network device for a relatively lower levels of service level agreement
      (SLA).</t>

      <t>Teaming up with a smart factory operator, network operators,
      equipment companies, and universities, ETRI demonstrated an ultra-low
      latency, high-reliability 5G wired and wireless network-based remote
      industrial Internet of Things (IIoT) service by connecting a control
      center and a smart factory through three different operators' networks
      at a distance of 280 km. In this trail, it was demonstrated that
      real-time remote smart manufacturing service is possible by making
      round-trip delay below 3 ms within a smart factory and below 10 ms
      between remote 5G industrial devices. In the future, the team plans to
      examine feasibility of large-scale deterministic networking by
      connecting smart factories in Gyeongsan, South Korea and Oulu,
      Finland.</t>

      <t>These trials show that both operators and enterprise users begin to
      put forward requirements for the certainty of large-scale networks, but
      the implementation technologies are not exactly the same.</t>
    </section>
  </back>
</rfc>
